replicaCount: 1

image:
  registry: ghcr.io
  repository: infratographer/porton/porton
  pullPolicy: IfNotPresent
  tag: "latest"

krakend:
  config: ""
  partials:
    input_headers.tmpl: |-
      "input_headers": [
        "Content-Type",
        "ClientId"
      ]
    rate_limit_backend.tmpl: |-
      "qos/ratelimit/proxy": {
        "max_rate": 0.5,
        "capacity": 1
      }
    endpoints.tmpl: |-
      [
        {
          "endpoint": "/test-1",
          "method": "GET",
          "backend": [
            {
              "url_pattern": "/__debug/dbg",
              "method": "GET",
              "host": [
                "http://localhost:8080"
              ]
            }
          ]
        },
        {
          "endpoint": "/test-2",
          "method": "GET",
          "backend": [
            {
              "url_pattern": "/__debug/dbg",
              "method": "GET",
              "host": [
                "http://localhost:8080"
              ]
            }
          ]
        }
      ]
  settings:
    service.json: |-
      {
      	"port": 8080,
      	"environment": "PRODUCTION",
      	"default_host": "http://localhost:8080",
      	"timeout": "3s",
      	"cache_ttl": "3s",
      	"output_encoding": "json",
      	"extra_config": {}
      }
  templates: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
